generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Grandparent {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  avatar_publicId   String?
  avatar        String?
  pseudo        String          @unique
  firstName     String
  lastName      String
  email         String
  password      String
  city         String?
  age           DateTime?
  phone         String?
  role          String          @default("grandparent")
  healthissue   Boolean @default(false)
  sportaddict   Boolean @default(false)
  swim          Boolean @default(true)
  vision        Boolean @default(false)
  mobility      Boolean @default(false)
  language      Boolean @default(false)
  audition      Boolean @default(false)
  notifications Notification[]
  gallery       Image[]
  experience    Experience[]
  relation      Relation[]
}

model Grandchildren {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  avatar_publicId   String?
  avatar        String?
  pseudo        String         @unique
  firstName     String
  lastName      String
  email         String
  password      String
  city         String?
  age           DateTime?
  phone         String?
  role          String          @default("grandchildren")
  healthissue   Boolean @default(false)
  sportaddict   Boolean @default(false)
  swim          Boolean @default(true)
  vision        Boolean @default(false)
  mobility      Boolean @default(false)
  language      Boolean @default(false)
  audition      Boolean @default(false)
  notifications Notification[]
  gallery       Image[]
  experience    Experience[]
  relation      Relation[]
}

model Notification {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  grandparent      Grandparent?   @relation(fields: [grandParent_id], references: [id])
  grandParent_id   Int
  grandChildren    Grandchildren? @relation(fields: [grandChildren_id], references: [id])
  grandChildren_id Int
  sender           String
}

model Relation {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  grandparent      Grandparent?   @relation(fields: [grandParent_id], references: [id])
  grandParent_id   Int
  grandChildren    Grandchildren? @relation(fields: [grandChildren_id], references: [id])
  grandChildren_id Int
}

model Experience{
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  name            String
  place           String
  start           DateTime
  end             DateTime
  long            String
  lat             String
  grandParent      Grandparent   @relation(fields: [grandParent_id], references: [id])
  grandParent_id   Int
  grandChildren    Grandchildren @relation(fields: [grandChildren_id], references: [id])
  grandChildren_id Int
  image            Image[]
}

model Activity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  place     String
  areas     String
  long      String
  lat       String
  healthissue  Boolean @default(false)
  vision        Boolean @default(false)
  mobility      Boolean @default(false)
  language      Boolean @default(false)
  audition      Boolean @default(false)
  sportaddict    Boolean @default(false)
  swim           Boolean @default(true)
  accomodation   String
  theme          Theme[]
  image          String
  image_publicId String
}

model Theme {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  mainTheme   String
  secondTheme String?
  thirdTheme  String?
  activity    Activity[]
}

model Image {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  image_publicId   String
  image            String
  grandParent      Grandparent?   @relation(fields: [grandParent_id], references: [id])
  grandParent_id   Int?
  grandChildren    Grandchildren? @relation(fields: [grandChildren_id], references: [id])
  grandChildren_id Int?
  experience       Experience @relation(fields: [experience_id], references: [id])
  experience_id    Int
}